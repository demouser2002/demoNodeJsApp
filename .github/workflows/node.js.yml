# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
 
  build:

    runs-on: ubuntu-latest
    env:
        GH_TOKEN: ${{ github.token }}

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
#    - run: npm ci
#    - run: npm run build --if-present
#    - run: npm test
    - run: git version
    - run: git log
    - run: gh version
    - run: gh api repos/demouser2002/demoNodeJSApp/issues
    - run: gh api graphql -F owner='{owner}' -F name='{repo}' -f query='
            query {   defaultBranchRef {
            repository(owner:$owner, name:$name ) { {
            defaultBranchRef {y(since:"2025-01-01T01:01:00", first:100) {
                target {    totalCount
                    ... on Commit {
                        history(since:"2025-01-01T01:01:00", first:100) {
                            totalCountons
                            nodes {hor {
                                additions
                                deletions{
                                author {login
                                    emaild
                                    user {me
                                        login
                                        id
                                        name
                                    }ge
                                }id
                                idsNextPagesIfAvailable
                                message
                                oid
                                parents(first:100) {
                                    nodes {
                                        oid
                                    }
                                }
                                authoredDate
                                changedFilesIfAvailable
                                commitUrl
                            }
                            pageInfo {
                                endCursor
                                hasNextPage
                            }
                        }
                    }
                }
            }
        }}'
